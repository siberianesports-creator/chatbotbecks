"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
"""

from aiogram import Dispatcher, types, F
from aiogram.fsm.context import FSMContext
from loguru import logger

from database.models import update_user_activity, increment_message_count
from utils.helpers import is_admin


async def handle_text_message(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    try:
        user_id = message.from_user.id
        text = message.text
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await update_user_activity(user_id)
        await increment_message_count(user_id)
        
        # –õ–æ–≥–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        logger.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {message.from_user.full_name} (ID: {user_id}): {text}")
        
        # –ü—Ä–æ—Å—Ç–∞—è –ª–æ–≥–∏–∫–∞ –æ—Ç–≤–µ—Ç–∞
        if "–ø—Ä–∏–≤–µ—Ç" in text.lower():
            response = f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! üëã"
        elif "–∫–∞–∫ –¥–µ–ª–∞" in text.lower():
            response = "–°–ø–∞—Å–∏–±–æ, —É –º–µ–Ω—è –≤—Å–µ –æ—Ç–ª–∏—á–Ω–æ! –ê —É –≤–∞—Å –∫–∞–∫ –¥–µ–ª–∞? üòä"
        elif "—Å–ø–∞—Å–∏–±–æ" in text.lower():
            response = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞! –†–∞–¥ –±—ã—Ç—å –ø–æ–ª–µ–∑–Ω—ã–º! üôè"
        elif "–ø–æ–∫–∞" in text.lower() or "–¥–æ —Å–≤–∏–¥–∞–Ω–∏—è" in text.lower():
            response = "–î–æ —Å–≤–∏–¥–∞–Ω–∏—è! –ë—É–¥—É –∂–¥–∞—Ç—å –Ω–∞—à–µ–≥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞! üëã"
        elif "–ø–æ–º–æ—â—å" in text.lower() or "help" in text.lower():
            response = """
üìö <b>–ö–∞–∫ —è –º–æ–≥—É –ø–æ–º–æ—á—å?</b>

<b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É
/help - –ü–æ–¥—Ä–æ–±–Ω–∞—è —Å–ø—Ä–∞–≤–∫–∞
/profile - –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å

<b>–ß—Ç–æ —è —É–º–µ—é:</b>
‚Ä¢ –û—Ç–≤–µ—á–∞—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
‚Ä¢ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –º–µ–¥–∏–∞-—Ñ–∞–π–ª—ã
‚Ä¢ –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
‚Ä¢ –ü–æ–º–æ–≥–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º

–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ —á—Ç–æ-–Ω–∏–±—É–¥—å, –∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –ø–æ–º–æ—á—å!
            """
        else:
            response = f"""
üí¨ <b>–ü–æ–ª—É—á–µ–Ω–æ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:</b>
"{text}"

–Ø –æ–±—Ä–∞–±–æ—Ç–∞–ª –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å! 

<b>–ß—Ç–æ –≤—ã –º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å:</b>
‚Ä¢ –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å
‚Ä¢ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É /help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏
‚Ä¢ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ–¥–∏–∞-—Ñ–∞–π–ª
‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é

–ü–∏—à–∏—Ç–µ, —á—Ç–æ —É–≥–æ–¥–Ω–æ! üòä
            """
        
        await message.answer(response)
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")


async def handle_unknown_message(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π"""
    await message.answer(
        "ü§î –Ø –ø–æ–ª—É—á–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–æ –Ω–µ –∑–Ω–∞—é, –∫–∞–∫ –µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å.\n"
        "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /help"
    )


def register_text_handlers(dp: Dispatcher):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    dp.message.register(handle_text_message, F.text)
    dp.message.register(handle_unknown_message)
