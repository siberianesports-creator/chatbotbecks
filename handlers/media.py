"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –º–µ–¥–∏–∞-—Ñ–∞–π–ª–æ–≤
"""

from aiogram import Dispatcher, types, F
from aiogram.fsm.context import FSMContext
from loguru import logger
import os

from database.models import update_user_activity
from config import UPLOAD_PATH, ALLOWED_EXTENSIONS, MAX_FILE_SIZE
from utils.ai_services import ai_services


async def handle_photo(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π"""
    try:
        user_id = message.from_user.id
        await update_user_activity(user_id)
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–æ—Ç–æ
        photo = message.photo[-1]  # –ë–µ—Ä–µ–º —Å–∞–º–æ–µ –±–æ–ª—å—à–æ–µ —Ñ–æ—Ç–æ
        file_id = photo.file_id
        file_size = photo.file_size
        
        logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ —Ñ–æ—Ç–æ –æ—Ç {message.from_user.full_name} (ID: {user_id}), —Ä–∞–∑–º–µ—Ä: {file_size} –±–∞–π—Ç")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
        if file_size and file_size > MAX_FILE_SIZE * 1024 * 1024:
            await message.answer(f"‚ö†Ô∏è –§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: {MAX_FILE_SIZE} MB")
            return
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é AI
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            file = await message.bot.get_file(file_id)
            file_data = await message.bot.download_file(file.file_path)
            
            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å –ø–æ–º–æ—â—å—é Gemini
            analysis = await ai_services.analyze_image_with_gemini(file_data.read())
            
            if analysis:
                response = f"""
üì∏ <b>–ü–æ–ª—É—á–µ–Ω–æ —Ñ–æ—Ç–æ!</b>

<b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>
‚Ä¢ –†–∞–∑–º–µ—Ä: {file_size or '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'} –±–∞–π—Ç
‚Ä¢ ID —Ñ–∞–π–ª–∞: {file_id}
‚Ä¢ –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {message.from_user.full_name}

ü§ñ <b>AI –∞–Ω–∞–ª–∏–∑:</b>
{analysis}

<b>–ß—Ç–æ —è –º–æ–≥—É —Å–¥–µ–ª–∞—Ç—å:</b>
‚Ä¢ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–æ—Ç–æ
‚Ä¢ –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
‚Ä¢ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–±—Ä–∞—Ç–Ω–æ

–°–ø–∞—Å–∏–±–æ –∑–∞ —Ñ–æ—Ç–æ! üòä
                """
            else:
                response = f"""
üì∏ <b>–ü–æ–ª—É—á–µ–Ω–æ —Ñ–æ—Ç–æ!</b>

<b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>
‚Ä¢ –†–∞–∑–º–µ—Ä: {file_size or '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'} –±–∞–π—Ç
‚Ä¢ ID —Ñ–∞–π–ª–∞: {file_id}
‚Ä¢ –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {message.from_user.full_name}

<b>–ß—Ç–æ —è –º–æ–≥—É —Å–¥–µ–ª–∞—Ç—å:</b>
‚Ä¢ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–æ—Ç–æ
‚Ä¢ –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
‚Ä¢ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–±—Ä–∞—Ç–Ω–æ

–°–ø–∞—Å–∏–±–æ –∑–∞ —Ñ–æ—Ç–æ! üòä
                """
        except Exception as e:
            logger.error(f"Error analyzing image: {e}")
            response = f"""
üì∏ <b>–ü–æ–ª—É—á–µ–Ω–æ —Ñ–æ—Ç–æ!</b>

<b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>
‚Ä¢ –†–∞–∑–º–µ—Ä: {file_size or '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'} –±–∞–π—Ç
‚Ä¢ ID —Ñ–∞–π–ª–∞: {file_id}
‚Ä¢ –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {message.from_user.full_name}

<b>–ß—Ç–æ —è –º–æ–≥—É —Å–¥–µ–ª–∞—Ç—å:</b>
‚Ä¢ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–æ—Ç–æ
‚Ä¢ –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
‚Ä¢ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–±—Ä–∞—Ç–Ω–æ

–°–ø–∞—Å–∏–±–æ –∑–∞ —Ñ–æ—Ç–æ! üòä
            """
        
        await message.answer(response)
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–æ—Ç–æ: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–æ—Ç–æ.")


async def handle_video(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–∏–¥–µ–æ"""
    try:
        user_id = message.from_user.id
        await update_user_activity(user_id)
        
        video = message.video
        file_id = video.file_id
        file_size = video.file_size
        duration = video.duration
        width = video.width
        height = video.height
        
        logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ –≤–∏–¥–µ–æ –æ—Ç {message.from_user.full_name} (ID: {user_id})")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
        if file_size and file_size > MAX_FILE_SIZE * 1024 * 1024:
            await message.answer(f"‚ö†Ô∏è –§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: {MAX_FILE_SIZE} MB")
            return
        
        response = f"""
üé• <b>–ü–æ–ª—É—á–µ–Ω–æ –≤–∏–¥–µ–æ!</b>

<b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>
‚Ä¢ –†–∞–∑–º–µ—Ä: {file_size or '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'} –±–∞–π—Ç
‚Ä¢ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {duration or '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'} —Å–µ–∫—É–Ω–¥
‚Ä¢ –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ: {width}x{height}
‚Ä¢ ID —Ñ–∞–π–ª–∞: {file_id}

<b>–ß—Ç–æ —è –º–æ–≥—É —Å–¥–µ–ª–∞—Ç—å:</b>
‚Ä¢ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤–∏–¥–µ–æ
‚Ä¢ –ò–∑–≤–ª–µ—á—å –∫–∞–¥—Ä—ã
‚Ä¢ –°–æ–∑–¥–∞—Ç—å –ø—Ä–µ–≤—å—é

–û—Ç–ª–∏—á–Ω–æ–µ –≤–∏–¥–µ–æ! üé¨
        """
        
        await message.answer(response)
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∏–¥–µ–æ: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∏–¥–µ–æ.")


async def handle_document(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"""
    try:
        user_id = message.from_user.id
        await update_user_activity(user_id)
        
        document = message.document
        file_name = document.file_name
        file_size = document.file_size
        mime_type = document.mime_type
        
        logger.info(f"–ü–æ–ª—É—á–µ–Ω –¥–æ–∫—É–º–µ–Ω—Ç –æ—Ç {message.from_user.full_name} (ID: {user_id}): {file_name}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
        if file_name:
            file_ext = os.path.splitext(file_name)[1].lower()
            if file_ext not in ALLOWED_EXTENSIONS:
                await message.answer(f"‚ö†Ô∏è –¢–∏–ø —Ñ–∞–π–ª–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è. –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã: {', '.join(ALLOWED_EXTENSIONS)}")
                return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
        if file_size and file_size > MAX_FILE_SIZE * 1024 * 1024:
            await message.answer(f"‚ö†Ô∏è –§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: {MAX_FILE_SIZE} MB")
            return
        
        response = f"""
üìÑ <b>–ü–æ–ª—É—á–µ–Ω –¥–æ–∫—É–º–µ–Ω—Ç!</b>

<b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>
‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ: {file_name or '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}
‚Ä¢ –†–∞–∑–º–µ—Ä: {file_size or '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'} –±–∞–π—Ç
‚Ä¢ –¢–∏–ø: {mime_type or '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}

<b>–ß—Ç–æ —è –º–æ–≥—É —Å–¥–µ–ª–∞—Ç—å:</b>
‚Ä¢ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç
‚Ä¢ –ü—Ä–æ—á–∏—Ç–∞—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ (–µ—Å–ª–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã–π)
‚Ä¢ –°–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é

–î–æ–∫—É–º–µ–Ω—Ç –ø–æ–ª—É—á–µ–Ω! üìã
        """
        
        await message.answer(response)
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞.")


async def handle_voice(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    try:
        user_id = message.from_user.id
        await update_user_activity(user_id)
        
        voice = message.voice
        duration = voice.duration
        file_size = voice.file_size
        
        logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {message.from_user.full_name} (ID: {user_id})")
        
        response = f"""
üé§ <b>–ü–æ–ª—É—á–µ–Ω–æ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!</b>

<b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>
‚Ä¢ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {duration} —Å–µ–∫—É–Ω–¥
‚Ä¢ –†–∞–∑–º–µ—Ä: {file_size or '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'} –±–∞–π—Ç

<b>–ß—Ç–æ —è –º–æ–≥—É —Å–¥–µ–ª–∞—Ç—å:</b>
‚Ä¢ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∞—É–¥–∏–æ
‚Ä¢ –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ —Ç–µ–∫—Å—Ç (–≤ –±—É–¥—É—â–µ–º)
‚Ä¢ –°–æ–∑–¥–∞—Ç—å —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—é

–ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ! üéµ
        """
        
        await message.answer(response)
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.")


def register_media_handlers(dp: Dispatcher):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –º–µ–¥–∏–∞-—Ñ–∞–π–ª–æ–≤"""
    dp.message.register(handle_photo, F.photo)
    dp.message.register(handle_video, F.video)
    dp.message.register(handle_document, F.document)
    dp.message.register(handle_voice, F.voice)
